DEBUG: Emitted: define i32 @main(){
DEBUG: Emitted: br label %label_8
DEBUG: Emitted: br label %label_15
DEBUG: Emitted: label_8:
DEBUG: Emitted: br label %label_19
DEBUG: Emitted: label_19:
DEBUG: Emitted: label_7:
DEBUG: Emitted: call void @print(i8* getelementptr ([5 x i8], [5 x i8]* @.t0, i32 0, i32 0))
DEBUG: Emitted: br label %label_18
DEBUG: Emitted: br label %label_26
DEBUG: Emitted: label_15:
DEBUG: Emitted: label_26:
DEBUG: Emitted: ret i32 0
DEBUG: Emitted: }
declare i32 @printf(i8*, ...)
declare void @exit(i32)
declare i32 @scanf(i8*, ...)
@.str_zeroDiv = internal constant [23 x i8] c"Error division by zero\00"
@global_bool_flag = global i1 false
@.str_specifier = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.int_specifier = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.int_specifier_scan = private unnamed_addr constant [3 x i8] c"%d\00", align 1
define void @print(i8*) {
  %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
  call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
  ret void
}
define void @printi(i32) {
  %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
  call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
  ret void
}
define i32 @readi() {
  %spec_ptr = getelementptr [3 x i8], [3 x i8]* @.int_specifier_scan, i32 0, i32 0
  %num = alloca i32
  call i32 (i8*, ...) @scanf(i8* %spec_ptr, i32* %num)
  %result = load i32, i32* %num
  ret i32 %result
}
@.t0 = internal constant [5 x i8] c"true\00"
define i32 @main(){
br label %label_8
br label %label_15
label_8:
br label %label_19
label_19:
label_7:
call void @print(i8* getelementptr ([5 x i8], [5 x i8]* @.t0, i32 0, i32 0))
br label %label_18
br label %label_26
label_15:
label_26:
ret i32 0
}
